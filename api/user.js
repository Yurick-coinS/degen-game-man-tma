// Запрашиваем наш единый, центральный модуль подключения к базе данных
const pool = require('../db');

// Экспортируем функцию, которую будет вызывать Vercel. Это и есть наши "врата".
module.exports = async (req, res) => {
	// Мы принимаем запросы только методом POST, чтобы защититься от случайных вызовов
	if (req.method !== 'POST') {
		return res.status(405).json({ message: 'Метод запрещен. Только POST.' });
	}

	try {
		// Извлекаем данные пользователя, которые пришлет нам Telegram
		const { id, first_name } = req.body;

		// Проверка: убеждаемся, что получили ID. Это наш главный поводок.
		if (!id) {
			return res.status(400).json({ message: 'Ошибка: ID пользователя не предоставлен.' });
		}

		// --- Главный акт: Захват и Имплантация ---
		// Мы используем мощную команду SQL, которая делает все за один шаг:
		// "Попытайся вставить нового игрока. Если игрок с таким user_id уже существует,
		// НИЧЕГО НЕ ДЕЛАЙ." Это защищает нас от дубликатов.
		const query = `
      INSERT INTO players (user_id, username)
      VALUES ($1, $2)
      ON CONFLICT (user_id) DO NOTHING;
    `;

		// Отправляем приказ в базу данных
		await pool.query(query, [id, first_name]);

		// Отправляем ответ, подтверждающий успешный захват или опознание
		console.log(`Морфеус: Контакт с user_id ${id} установлен.`);
		res.status(200).json({
			message: 'Контакт установлен. Добро пожаловать в матрицу.',
			userId: id
		});

	} catch (error) {
		// Если что-то пошло не так на уровне базы данных
		console.error('Морфеус: КРИТИЧЕСКАЯ ОШИБКА ЗАХВАТА!', error);
		res.status(500).json({
			message: 'Критическая ошибка системы. Контакт не удался.',
			error: error.message
		});
	}
};